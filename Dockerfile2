ARG UBUNTU_VERSION=18.04
ARG CUDA_VERSION=10.0
FROM nvidia/cuda:${CUDA_VERSION}-devel-ubuntu${UBUNTU_VERSION}
# An ARG declared before a FROM is outside of a build stage,
# so it canâ€™t be used in any instruction after a FROM
ARG USER=vpoat
ARG PASSWORD=${USER}123
ARG PYTHON_VERSION=3.7
# To use the default value of an ARG declared before the first FROM,
# use an ARG instruction without a value inside of a build stage:
ARG CUDA_VERSION

# Install ubuntu packages
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
        build-essential \
        git \
        curl \
        ca-certificates \
        sudo \
        locales \
        openssh-server \
        vim \
        ffmpeg libsm6 libxext6 && \
    # Remove the effect of `apt-get update`
    rm -rf /var/lib/apt/lists/* && \
    # Make the "en_US.UTF-8" locale
    localedef -i en_US -c -f UTF-8 -A /usr/share/locale/locale.alias en_US.UTF-8
ENV LANG en_US.utf8

# Setup timezone
ENV TZ=Asia/Seoul
RUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone

####################################################################################
# START USER SPECIFIC COMMANDS
####################################################################################

# Create an user for the app.
RUN useradd --create-home --shell /bin/bash --groups sudo ${USER}
RUN echo ${USER}:${PASSWORD} | chpasswd
USER ${USER}
ENV HOME /home/${USER}
WORKDIR $HOME

# Install miniconda (python)
# Referenced PyTorch's Dockerfile:
#   https://github.com/pytorch/pytorch/blob/master/docker/pytorch/Dockerfile
RUN curl -o miniconda.sh https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh && \
    chmod +x miniconda.sh && \
    ./miniconda.sh -b -p conda && \
    rm miniconda.sh && \
    conda/bin/conda install -y python=$PYTHON_VERSION && \
    conda/bin/conda install -y pytorch=1.1.0 torchvision=0.3.0 cudatoolkit=${CUDA_VERSION} -c pytorch && \
    conda/bin/conda clean -ya
ENV PATH $HOME/conda/bin:$PATH
RUN touch $HOME/.bashrc && \
    echo "export PATH=$HOME/conda/bin:$PATH" >> $HOME/.bashrc

RUN conda/bin/conda install -y jupyter jupyterlab

# Install AerialDetection
WORKDIR $HOME/AerialDetection

ADD . $HOME/AerialDetection 

RUN pip install cython ipykernel

# RUN chmod +x ./compile.sh

RUN ./compile.sh

RUN pip install -r requirements.txt

USER root
RUN pip install --user -e . 

RUN apt update
RUN apt install swig -y

WORKDIR $HOME/AerialDetection/DOTA_devkit
RUN swig -c++ -python polyiou.i
RUN python3 setup.py build_ext --inplace

USER ${USER}
# Expose port 8888 for JupyterLab
EXPOSE 22 8888

# Start openssh server
USER root
RUN mkdir /run/sshd
CMD ["/usr/sbin/sshd","-D"]

# Missing library for opencv
#RUN apt-get install 
